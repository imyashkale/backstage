app:
  baseUrl: https://backstage.imyashkale.com

permission:
  enabled: true

backend:
  permission:
    enabled: true
  baseUrl: https://backstage.imyashkale.com
  listen:
    port: 7007
    host: 0.0.0.0
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: https://backstage.imyashkale.com
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  auth:
    keys:
      - secret: ${BACKEND_SECRET}
  database:
    client: pg
    connection:
      host: ${POSTGRES_SERVICE_HOST}
      port: ${POSTGRES_SERVICE_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
  
auth:
  environment: production
  providers:
    guest: {}
    github:
      production:
        prompt: auto
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
        callbackUrl: https://backstage.imyashkale.com/api/auth/github/handler/frame
        signIn:
          resolvers:
            - resolver: usernameMatchingUserEntityName
            - resolver: emailLocalPartMatchingUserEntityName
            - resolver: emailMatchingUserEntityProfileEmail

techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # 

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
  
    ## Uncomment these lines to add more example data
    - type: url
      target: https://github.com/imyashkale/idp/blob/master/packages/examples/org.yaml

    ## Uncomment these lines to add an example org
    - type: url
      target: https://github.com/imyashkale/idp/blob/master/packages/examples/entities.yaml
      rules:
        - allow: [User, Group]

